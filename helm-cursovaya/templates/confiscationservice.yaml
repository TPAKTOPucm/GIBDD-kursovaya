apiVersion: apps/v1
kind: Deployment
metadata:
  name: confiscationservice
  labels:
    app: confiscationservice
spec:
  replicas: {{ .Values.confiscationservice.replicaCount }}
  selector:
    matchLabels:
      app: confiscationservice
  template:
    metadata:
      labels:
        app: confiscationservice
    spec:
      initContainers:
      - name: get-vault-secrets
        image: vault:1.15.0
        command: ["/bin/sh", "-c"]
        args:
          - |
            vault login -method=kubernetes role=app-role
            vault kv get -format=json secret/data/fineservice/appsettings > /app/appsettings.json
        volumeMounts:
          - name: config
            mountPath: /app/appsettings.json
            subPath: appsettings.json
        env:
          - name: VAULT_ADDR
            value: "http://vault:8200"
          - name: KUBE_TOKEN
            valueFrom:
              secretKeyRef:
                name: vault-auth-token
                key: token
      - name: migrations
        image: "{{ .Values.confiscationservice.image.repository }}:{{ .Values.confiscationservice.image.tag }}"
        command: ["dotnet", "ef", "database", "update"]
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Production
        volumeMounts:
        - name: config
          mountPath: /app/appsettings.json
          subPath: appsettings.json
      containers:
      - name: confiscationservice
        image: "{{ .Values.confiscationservice.image.repository }}:{{ .Values.confiscationservice.image.tag }}"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config
          mountPath: /app/appsettings.json
          subPath: appsettings.json
      volumes:
      - name: config
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: confiscationservice
spec:
  type: {{ .Values.confiscationservice.service.type }}
  ports:
  - port: {{ .Values.confiscationservice.service.port }}
    targetPort: 80
  selector:
    app: confiscationservice