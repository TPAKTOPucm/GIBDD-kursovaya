apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "confiscationservice.fullname" . }}
  labels:
    app: confiscationservice
spec:
  replicas: {{ .Values.confiscationservice.replicaCount }}
  selector:
    matchLabels:
      app: confiscationservice
  template:
    metadata:
      labels:
        app: confiscationservice
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "{{ .Values.global.vault.role }}"
        vault.hashicorp.com/agent-inject-secret-appsettings.json: "{{ .Values.confiscationservice.vaultSecret }}"
        vault.hashicorp.com/agent-inject-template-appsettings.json: |
          {{ `{{- with secret "` }}{{ .Values.confiscationservice.vaultSecret }}{{ `" -}}
          {{ .Data.data.value }}
          {{- end }}` }}
    spec:
      initContainers:
      - name: migrations
        image: "{{ .Values.confiscationservice.image.repository }}:{{ .Values.confiscationservice.image.tag }}"
        command: ["dotnet", "ef", "database", "update"]
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Production
        volumeMounts:
        - name: config
          mountPath: /app/appsettings.json
          subPath: appsettings.json
      containers:
      - name: confiscationservice
        image: "{{ .Values.confiscationservice.image.repository }}:{{ .Values.confiscationservice.image.tag }}"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config
          mountPath: /app/appsettings.json
          subPath: appsettings.json
      volumes:
      - name: config
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: confiscationservice
spec:
  type: {{ .Values.confiscationservice.service.type }}
  ports:
  - port: {{ .Values.confiscationservice.service.port }}
    targetPort: 80
  selector:
    app: confiscationservice