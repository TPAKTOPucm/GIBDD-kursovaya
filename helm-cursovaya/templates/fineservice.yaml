apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fineservice.fullname" . }}
  labels:
    app: fineservice
spec:
  replicas: {{ .Values.fineservice.replicaCount }}
  selector:
    matchLabels:
      app: fineservice
  template:
    metadata:
      labels:
        app: fineservice
    spec:
      initContainers:
      - name: get-vault-secrets
          image: vault:1.15.0
          command: ["/bin/sh", "-c"]
          args:
            - |
              vault login -method=kubernetes role=app-role
              vault kv get -format=json secret/data/fineservice/appsettings > /app/appsettings.json
              cat /app/appsettings.json
          volumeMounts:
            - name: config
              mountPath: /app/appsettings.json
              subPath: appsettings.json
          env:
            - name: VAULT_ADDR
              value: "http://vault:8200"
            - name: KUBE_TOKEN
              valueFrom:
                secretKeyRef:
                  name: vault-auth-token
                  key: token
      - name: migrations
        image: "{{ .Values.fineservice.image.repository }}:{{ .Values.fineservice.image.tag }}"
        command: ["dotnet", "ef", "database", "update"]
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Production
        volumeMounts:
        - name: config
          mountPath: /app/appsettings.json
          subPath: appsettings.json
      containers:
      - name: fineservice
        image: "{{ .Values.fineservice.image.repository }}:{{ .Values.fineservice.image.tag }}"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config
          mountPath: /app/appsettings.json
          subPath: appsettings.json
      volumes:
      - name: config
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: fineservice
spec:
  type: {{ .Values.fineservice.service.type }}
  ports:
  - port: {{ .Values.fineservice.service.port }}
    targetPort: 80
  selector:
    app: fineservice